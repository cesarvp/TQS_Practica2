/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package BattleShip;


import java.util.*;

public class Juego {
	
 final int  BARCO = 1;
 final int  AGUA = 0;
  Tablero tab = new Tablero(8);
  Tablero tabDisparos = new Tablero(8);
  ArrayList<Barco> barcos = new ArrayList<Barco>();
  
  DatosJugar datosEn = new LeerDatosJugar();
	
 public Juego()	{
  
  Barco port1= new Barco (4,"Portaavion One"); 
  barcos.add(port1);
  Barco port2 = new Barco(4, "Portaavion Two");
  barcos.add(port2);
  Barco  des1 = new Barco (3,"Destructor One");
  barcos.add(des1);
  Barco des2 = new Barco(3, "Destructor Two"); 
  barcos.add(des2);
  Barco frag1 = new Barco (2,"Fragata One");
  barcos.add(frag1);
  Barco frag2 = new Barco(2, "Fragata Two");
  barcos.add(frag2);
  Barco sub1 = new Barco (1,"Submarino One");
  barcos.add(sub1);
  Barco sub2 = new Barco(1, "Submarino Two");
  barcos.add(sub2);
  
 }
 
 public void tipoEntradaDatos(DatosJugar d) 
 {
	 datosEn=d;
 }
 public int comprobarListaBarcos()  //Metodo solo de test.
 {
	 return barcos.size();
 }
  
  public void inicioPartida(Jugador j1, Jugador j2) //Metodo solo ejecutado en modo manual, no mock.
  {
	  
	  System.out.println("TURNO DE COLOCAR BARCOS DEL JUGADOR: "+j1.getNombre()+".\n");
		j1.colocadoBarcos();
		colocarBarcos();
		System.out.println("TURNO DE DISPARAR DEL JUGADOR: "+j2.getNombre()+".\n");
		jugar(j1);
		
		
		System.out.println("TURNO DE COLOCAR BARCOS DEL JUGADOR: "+j2.getNombre()+".\n");
		j2.colocadoBarcos();
		colocarBarcos();
		System.out.println("TURNO DE DISPARAR DEL JUGADOR: "+j1.getNombre()+".\n");
		jugar(j2);
		
		determinarGanador(j1, j2);
	  
	  
  }
  public void colocarBarcos() 
  {
	  int numB = 0;
	  boolean barcoOK = true;
	  tab.mostrarTablero();
	  int x =0;
	  int y=0;
	  String pos="";
	  while(numB<8) 
	  {
		  System.out.println("Introduce las coordenadas y la posicion del barco"+ (numB+1));
		  System.out.println(barcos.get(numB).getTipo()+" Medida: "+barcos.get(numB).getMedida() );
		  System.out.println("Coordenada X: ");
		  try {
			  x= datosEn.entrarCoordenadaX();
		  }catch(Exception e){barcoOK=false;}
		  System.out.println("Coordenada Y: ");
		  try {
		    y = datosEn.entrarCoordenadaY();
		  }catch(Exception e) {barcoOK=false;}
		  System.out.println("Posicion del Barco ( V o H ) ");
		  try {
		   pos = datosEn.entrarPosicion();
		  }catch(Exception e){barcoOK=false;}
		  if(barcoOK =true) {
		   barcoOK =tab.addBarco(x, y, pos, barcos.get(numB).getMedida(),barcos.get(numB));
		  }
		  //Guardar posicion en tablero de los barcos asi sabremos si estan tocados o hundidos
		  
		  if(barcoOK == false){
			 System.out.println("Las coordenadas o la posicion del barco incorrectas, sale de los limites del Tablero o posicion ocupada");
		  }else{
			  numB++;
		  } 
		  tab.mostrarTablero();
	  }
  }
  
  
  
  public void jugar(Jugador jug)  
  {
	  
	  System.out.println("\n");
	  System.out.println("\n");
	  System.out.println("TABLERO DE TIRO: \n");
	  tabDisparos.mostrarTablero();
	  
	  int tiradas = 0;
	  int totalTiradas= 35;
	
	  boolean entradaOK=true;
	  int x=0; int y=0;
	 
	  while(tiradas<totalTiradas) 
	  {
		  System.out.println("EMPIEZA LA TIRADA NUMERO "+ (tiradas+1) + " DE "+totalTiradas);
		  System.out.println("INTRODUCE LAS COORDENADAS QUE QUIERAS DISPARAR!");
		  System.out.println("Introduce X: ");
		  try {
			 x= datosEn.entrarCoordenadaDisparoX();
		  }catch(Exception e){entradaOK=false;}
		  System.out.println("Introduce Y:");
		  try {
		     y = datosEn.entrarCoordenadaDisparoY();
		  }catch(Exception e) {entradaOK=false;}
		  
		  if( x > 7 || y > 7 || x<0 || y<0 || entradaOK==false) 
		  {
			  System.out.println("ERROR!! LAS COORDENADAS NO SE HAN ENTRADO CORRECTAMENTE");
		  }
		  else {
			  
			  boolean tocado = tab.comprobarTirada(x,y);
			  if(tocado == false) 
			  {
				  System.out.println("AGUA!!! NO HAS TOCADO NINGUN BARCO!");
				  
				  
			  }else {
				  
				  int cont=0;
				  boolean encontrado = false;
				  if(tabDisparos.valorPosicion(x, y)==AGUA) {	
					  while(cont< barcos.size() && encontrado == false) 
						  // Por cada barco miramos si tienen esas coordenadas
					  {
						  
							  encontrado = barcos.get(cont).comprobarCoordenadas(x,y);
							  if(encontrado== true)
							  {
								  if(barcos.get(cont).estaHundido() == false) 
								  {
									  System.out.println(barcos.get(cont).getTipo()+" TOCADO!!!");
									  tabDisparos.llenarTablero(y,x,1);
									  barcos.get(cont).sumarTocado();
									  jug.sumarTocados();
								  }
								  if(barcos.get(cont).estaHundido()==true) {
									  System.out.println(barcos.get(cont).getTipo()+" HUNDIDO!!!");
									  jug.sumarHundidos();  
								  }  
							  }
						  cont++;
					  }
					  
				  }else {System.out.println("CASILLA YA DISPARADA!");}
				  
			  }
			   tiradas++;
			   tabDisparos.mostrarTablero();
		  }
	  }
	  if(jug.numeroHundidos()==8) 
	  {
		  jug.ponerGanador(true);
	  }
  }
  
  public void resetTablerosYBarcos() 
  {
	  tab.llenarTableroAgua();
	  tabDisparos.llenarTableroAgua();
	  barcos.clear();
	  Barco port1= new Barco (4,"Portaavion One");
	  barcos.add(port1);
	  Barco port2 = new Barco(4, "Portaavion Two");
	  barcos.add(port2);
	  Barco  des1 = new Barco (3,"Destructor One");
	  barcos.add(des1);
	  Barco des2 = new Barco(3, "Destructor Two"); 
	  barcos.add(des2);
	  Barco frag1 = new Barco (2,"Fragata One");
	  barcos.add(frag1);
	  Barco frag2 = new Barco(2, "Fragata Two");
	  barcos.add(frag2);
	  Barco sub1 = new Barco (1,"Submarino One");
	  barcos.add(sub1);
	  Barco sub2 = new Barco(1, "Submarino Two");
	  barcos.add(sub2);
  }
  
  public void determinarGanador(Jugador jug1, Jugador jug2) 
  {
	  if(jug1.esGanador()==true && jug2.esGanador()==false) 
	  {
		  System.out.println("EL GANADOR ES EL JUGADOR "+jug1.getNombre()+" !!!!!!");
	  }
	  if(jug2.esGanador()==true && jug1.esGanador()==false) 
	  { 
		  System.out.println("EL GANADOR ES EL JUGADOR "+jug2.getNombre()+" !!!!!!");
	  }
	  
	  if((jug2.esGanador()==false && jug1.esGanador()==false) || (jug2.esGanador()==true && jug1.esGanador()==true))
	  { 
		  
		  if(jug1.numeroHundidos()>jug2.numeroHundidos()) 
		  {
			  System.out.println("EL GANADOR ES EL  "+jug1.getNombre()+" !!!!!!");
			  jug1.ponerGanador(true);
			  jug2.ponerGanador(false);
		  }
		  if (jug2.numeroHundidos()>jug1.numeroHundidos()){
			  System.out.println("EL GANADOR ES EL  "+jug2.getNombre()+" !!!!!!");
			  jug1.ponerGanador(false);
			  jug2.ponerGanador(true);
		  }
		  if(jug2.numeroHundidos()==jug1.numeroHundidos())
		  {
			  System.out.println("LOS DOS JUGADORES HABEIS HUNDIDO EL MISMO NUMERO DE BARCOS!!!");
			  if(jug1.numeroTocados()>jug2.numeroTocados()) 
			  {
				  System.out.println("EL GANADOR ES EL: "+jug1.getNombre()+"!!!!!!"
				  		+ " PORQUE HA TOCADO MAS BARCOS!!");
				  jug1.ponerGanador(true);
				  jug2.ponerGanador(false);
			  }
			  if(jug2.numeroTocados()>jug1.numeroTocados()) 
			  {
				  System.out.println("EL GANADOR ES EL: "+jug2.getNombre()+"!!!!!!"
					  		+ " PORQUE HA TOCADO MAS BARCOS!!");
				  jug1.ponerGanador(false);
				  jug2.ponerGanador(true);
			  }
			  if(jug2.numeroTocados()==jug1.numeroTocados()) {
				  System.out.println("LOS DOS JUGADORES HABEIS TOCADO TAMBIEN EL MISMO NUMERO DE BARCOS!!!");
				  System.out.println("EMPATE TOTAL!!!");
				  jug1.ponerGanador(true);
				  jug2.ponerGanador(true);
			  }
		  }
	  }
  }
}
